@*@page "/Admin/Create"

@inherits ItemBase

<Banner BannerTitleParameter="@this.BannerTitleValue" AppNameParameter="@this.AppNameValue" />

<div class="container_a- max_width_lg">
    <h5 class="text_center">@this.FormTitle</h5>
    <p>Add entries to create a list of tasks to do. After adding to the list you can check and remove what you do not wish to save. You can even undo and redo operations. When you have completed your list click Save to store your entries to the database.</p>

    <div class="EditForm">
        <EditForm Model="@this.Item" OnValidSubmit="@this.AddItem">
            <DataAnnotationsValidator />
            <input type="hidden" @bind="this.Item.Id" />

            <div class="form_group">
                <label for="ContactName" class="control_label">Contact Name</label>
                <InputText @bind-Value="this.Item.ContactName" class="form_control" id="ContactName" placeholder="Contact Name" @onchange="(_) => this.OnContactNameChange()" />
                <ValidationMessage For="@(() => this.Item.ContactName)" />
            </div>
            <div class="form_group">
                <label for="FirstName" class="control_label">First Name</label>
                <InputText @bind-Value="this.Item.FirstName" class="form_control" id="FirstName" placeholder="First Name" @onchange="(_) => this.OnFirstNameChange()" />
                <ValidationMessage For="@(() => this.Item.FirstName)" />
            </div>
            <div class="form_group">
                <label for="LastName" class="control_label">Last Name</label>
                <InputText @bind-Value="this.Item.LastName" class="form_control" id="LastName" placeholder="Last Name" @onchange="(_) => this.OnLastNameChange()" />
                <ValidationMessage For="@(() => this.Item.LastName)" />
            </div>
            <div class="form_group">
                <label for="Email" class="control_label">Email</label>
                <InputText @bind-Value="this.Item.Email" class="form_control" id="Email" placeholder="Email" @onchange="(_) => this.OnEmailChange()" />
                <ValidationMessage For="@(() => this.Item.Email)" />
            </div>
            <div class="form_group">
                <label for="Phone" class="control_label">Phone</label>
                <InputText @bind-Value="this.Item.Phone" class="form_control" id="Phone" placeholder="Phone" @onchange="(_) => this.OnPhoneChange()" />
                <ValidationMessage For="@(() => this.Item.Phone)" />
            </div>
            <div class="form_group">
                <label for="Address" class="control_label">Address</label>
                <InputTextArea @bind-Value="this.Item.Address" class="form_control" id="Address" placeholder="Address" rows="3" @onchange="(_) => this.OnAddressChange()" />
                <ValidationMessage For="@(() => this.Item.Address)" />
            </div>

            <div class="form_group">
                <input type="hidden" @bind="this.CategoryId" />
                <label for="CategoryId" class="control_label">Category</label>
                <InputSelect @bind-Value="@this.CategoryId" id="CategoryId" class="form_control">
                    <option value="0">-- Select a Category --</option>
                    @foreach(var item in this.Categories)
                    {
                        <option value="@item.Id">@item.Name</option>
                    }
                    @{
                        this.Item.ContactEntityCategoryId = this.GetCategoryId(categoryId: this.CategoryId);
                    }
                </InputSelect>
            </div>

            <div class="form_group">
                <label for="Image" class="control_label">Image:</label>
                <div class="form_control">
                    <Uploader OnChange="this.AssignImageUrl" />
                </div>
            </div>

            <div class="form_group">
                <button type="button" class="@this.PrimaryBtnCssClass" disabled="@(!this.ITaskService.CanUndo)" @onclick="this.ITaskService.Undo">
                    Undo
                </button>
                <button type="button" class="@this.PrimaryBtnCssClass" disabled="@(!this.ITaskService.CanRedo)" @onclick="this.ITaskService.Redo">
                    Redo
                </button>
                <button type="button" class="@this.DangerBtnCssClass" disabled="@(!this.ITaskService.CanRemove)" @onclick="this.ITaskService.RemoveDone">
                    Remove
                </button>
                <button type="submit" class="@this.PrimaryBtnCssClass" disabled="@this.CanAdd">
                    Add Entry
                </button>
                <button type="button" class="@this.PrimaryBtnCssClass" @onclick="this.InsertAsync" disabled="@this.CanSave">
                    Save
                </button>
            </div>
        </EditForm>

        @if(this.ITaskService.Items.Count < 1)
        {
            <h1>One or more Items must first be added to the list before saving.</h1>
        }

        <p>Entry List</p>

        <div class="checkbox_list_container- checkboxes grid_col_repeat_4_1fr pad_bottom_20">
            @foreach(var item in this.ITaskService.Items)
            {
                var CheckboxId = Guid.NewGuid();
                <label for="@CheckboxId" class="option_item">
                    <input type="checkbox" @bind="@item.IsChecked" id="@CheckboxId" class="checkbox" />

                    <span class="option_inner theme">
                        <span class="tickmark"></span>
                        <span class="name">
                            @item.ContactName
                        </span>
                    </span>
                </label>
            }
        </div>
    </div>
</div>

<div class="page-top">
    <NavLink href="@PageRoute.AdminCreate" class="top"></NavLink>
</div>*@
